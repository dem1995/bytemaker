Search.setIndex({"docnames": ["bytemaker", "index", "modules", "quickstart/bittypes", "quickstart/bitvector", "quickstart/conversions", "quickstart/index", "quickstart/notebooks/bittypes", "quickstart/notebooks/bitvector", "quickstart/notebooks/conversions", "reference/bittypes/bittypes", "reference/bitvector/bitvector", "reference/conversions/conversions", "reference/index", "reference/other_modules/other_modules"], "filenames": ["bytemaker.rst", "index.rst", "modules.rst", "quickstart\\bittypes.rst", "quickstart\\bitvector.rst", "quickstart\\conversions.rst", "quickstart\\index.rst", "quickstart\\notebooks\\bittypes.ipynb", "quickstart\\notebooks\\bitvector.ipynb", "quickstart\\notebooks\\conversions.ipynb", "reference\\bittypes\\bittypes.rst", "reference\\bitvector\\bitvector.rst", "reference\\conversions\\conversions.rst", "reference\\index.rst", "reference\\other_modules\\other_modules.rst"], "titles": ["&lt;no title&gt;", "Bytemaker documentation", "bytemaker", "BitTypes", "BitVector", "Conversions", "Quickstart", "BitTypes", "BitVector", "Conversions", "bittypes package", "bitvector package", "Conversions", "API Reference", "Other Modules"], "terms": {"version": [1, 6, 14], "0": [1, 8, 11, 14], "9": 1, "1": [1, 7, 8, 11], "us": [1, 7, 8, 10, 11, 12, 14], "link": 1, "sourc": [1, 7, 10, 11, 12, 14], "repositori": 1, "issu": 1, "tracker": 1, "python": [1, 4, 5, 6, 7, 8, 9, 10, 12, 13, 14], "3": [1, 7, 8, 9, 14], "8": [1, 8, 9, 10, 11, 14], "compat": [1, 14], "librari": [1, 14], "byte": [1, 6, 7, 8, 10, 11, 12, 14], "serial": 1, "deseri": 1, "It": [1, 4, 8, 10, 11, 14], "bring": 1, "c": [1, 5, 6, 7, 9, 11, 12, 13, 14], "bitfield": [1, 5, 9], "function": [1, 4, 5, 8, 9, 10, 12, 13, 14], "over": [1, 11], "To": [1, 6, 7, 8, 10], "end": [1, 4, 8, 11, 14], "provid": [1, 7, 10, 11, 12, 13, 14], "method": [1, 4, 5, 9, 10, 11, 14], "type": [1, 6, 7, 8, 9, 10, 11, 13, 14], "convert": [1, 6, 7, 9, 10, 11, 12, 13, 14], "dataclass": [1, 6, 9], "decor": [1, 14], "class": [1, 4, 5, 6, 7, 8, 9, 11, 12, 13, 14], "give": [1, 11], "follow": [1, 8, 10, 14], "A": [1, 9, 10, 11, 14], "bitvector": [1, 6, 7, 9, 10, 12], "analog": 1, "": [1, 4, 6, 7, 8, 9, 10, 11, 14], "bytearrai": [1, 4, 7, 8, 11], "sub": 1, "bit": [1, 4, 6, 7, 8, 9, 10, 11, 12, 13, 14], "quantiti": 1, "readili": [1, 8], "support": [1, 4, 7, 8, 14], "convers": [1, 6, 10], "between": [1, 11, 12, 13], "represent": [1, 7, 8, 10, 11, 12, 14], "variou": [1, 10, 12, 13, 14], "customiz": 1, "data": [1, 4, 7, 8, 9, 13], "set": [1, 7, 10, 11, 13, 14], "bittyp": [1, 5, 6, 8, 9], "includ": [1, 11, 14], "size": [1, 11], "buffer": [1, 11, 13, 14], "unsign": [1, 10], "sign": [1, 10, 11, 14], "int": [1, 7, 8, 9, 11, 12, 13, 14], "float": [1, 7, 9, 13, 14], "string": [1, 8, 11, 13, 14], "have": [1, 4, 7, 8, 10, 14], "underli": [1, 7, 8, 10], "where": [1, 6, 7, 8, 11, 14], "annot": [1, 14], "standard": [1, 11, 14], "ctype": [1, 6, 9, 13], "c_uint8": 1, "structur": [1, 9, 12, 14], "etc": [1, 7, 14], "default": [1, 8, 10, 11, 12, 14], "pytyp": [1, 9, 13], "bool": [1, 10, 11, 12, 14], "str": [1, 7, 9, 10, 11, 14], "char": [1, 9], "nest": 1, "No": 1, "problem": 1, "automag": 1, "handl": [1, 9, 10, 11, 13, 14], "ani": [1, 10, 11, 12, 14], "aforement": 1, "object": [1, 6, 7, 8, 9, 10, 11, 12, 14], "via": [1, 7, 14], "aggregate_typ": [1, 5, 6, 9], "to_bits_aggreg": [1, 5, 6, 9], "from_bits_aggreg": [1, 5, 6, 9], "quickstart": 1, "guid": 1, "familiar": [1, 14], "yourself": 1, "basic": [1, 14], "api": 1, "refer": [1, 14], "For": [1, 7, 8, 14], "more": [1, 8, 10, 14], "depth": 1, "detail": [1, 14], "fish": 3, "i": [4, 6, 7, 8, 9, 10, 11, 12, 14], "allow": [4, 8, 10, 12, 14], "level": [4, 6, 8, 11, 14], "manipul": [4, 6, 7, 8, 11], "design": [4, 8], "all": [4, 7, 8, 10, 11, 14], "built": [4, 8], "almost": [4, 8], "same": [4, 7, 8, 10, 14], "granular": [4, 8], "bytemak": [5, 6, 7, 8, 9, 10, 11, 12, 13, 14], "leverag": [5, 9], "its": [5, 8, 9, 10, 14], "py": [5, 6, 9, 14], "meth": [5, 14], "ar": [5, 7, 9, 10, 11, 14], "primari": [5, 9], "accomplish": [5, 9], "thi": [5, 7, 8, 9, 10, 11, 12, 14], "revolv": 6, "around": [6, 8], "three": [6, 11], "interact": 6, "like": [6, 10, 14], "abstract": [6, 10, 14], "lai": 6, "out": [6, 11, 14], "from": [6, 7, 8, 9, 10, 11, 12, 14], "run": 6, "m": 6, "pip": 6, "you": [6, 7, 11, 14], "can": [6, 7, 8, 10, 11, 12, 14], "also": [6, 8, 10, 11, 14], "develop": 6, "clone": 6, "dev": 6, "branch": 6, "github": 6, "import": [6, 7, 8, 9, 14], "sint16": [6, 10], "uint16": [6, 7, 10], "buffer128": [6, 10], "str64": 6, "saveinfo": 6, "name": [6, 10], "xpo": 6, "ypo": 6, "health": 6, "inventori": 6, "rom_piec": 6, "some": [6, 8, 14], "rom_piece_bit": 6, "save_info": 6, "print": [6, 7, 8, 9], "packag": [7, 13], "expos": [7, 14], "work": [7, 13, 14], "style": 7, "binari": [7, 8, 10, 11], "e": [7, 9, 10, 14], "g": [7, 10, 14], "uint8": [7, 10], "int16": 7, "two": [7, 10, 11, 14], "main": 7, "attribut": [7, 14], "valu": [7, 10, 11, 14], "The": [7, 10, 11, 12, 13, 14], "what": [7, 10], "repres": [7, 10, 11, 12, 14], "exampl": [7, 14], "0b00000001": 7, "would": 7, "either": [7, 14], "updat": [7, 14], "other": [7, 8, 10, 11], "both": [7, 14], "properti": [7, 10, 14], "rather": [7, 10], "than": [7, 10, 11], "field": 7, "6": 7, "buffer32": [7, 10], "buffer8": [7, 10], "sint8": [7, 10], "uint32": [7, 10], "float16": [7, 10], "str32": 7, "sint": [7, 13], "uint": [7, 13], "one": [7, 10, 11, 14], "wai": [7, 14], "share": [7, 8, 11], "common": 7, "constructor": [7, 8, 10, 14], "signatur": [7, 14], "def": [7, 14], "__init__": [7, 14], "self": [7, 11, 14], "option": [7, 9, 10, 11, 12, 14], "t": [7, 10, 11, 14], "none": [7, 10, 11, 14], "endian": [7, 9, 10, 11, 12], "liter": [7, 10, 11, 14], "big": [7, 9, 10, 11], "littl": [7, 10, 11], "source_else_big": [7, 10], "If": [7, 10, 11, 14], "determin": [7, 11, 14], "which": [7, 8, 9, 10, 11, 14], "correspond": [7, 14], "input": 7, "appropri": 7, "As": 7, "str8": [7, 9], "5": [7, 10], "equival": 7, "00000101": 7, "achiev": 7, "latter": 7, "do": [7, 14], "creation": [7, 10], "time": [7, 10], "adjust": [7, 10], "further": [7, 10], "creat": [7, 10, 11, 12, 14], "new": [7, 10, 11], "previou": 7, "differ": 7, "agnost": [7, 14], "onli": [7, 11, 14], "becom": 7, "relev": 7, "when": [7, 11, 14], "bytestream": 7, "16": [7, 8, 10, 11], "sint8_32": 7, "32": [7, 14], "uint8_32": 7, "anoth": [7, 14], "uint8_oth": 7, "show": 7, "note": [7, 8, 10, 11, 14], "first": [7, 8, 10, 11, 14], "line": 7, "being": 7, "next": [7, 10], "a_str32": 7, "hiya": 7, "a_str32_littl": 7, "a_str32_byt": 7, "a_str32_little_byt": 7, "00100000": [7, 8], "39": [7, 8, 9], "224": 7, "11100000": 7, "01001000": [7, 8, 9], "01100001": 7, "b": [7, 8, 9, 10], "ayih": 7, "typic": 7, "__lshift__": [7, 8], "__rshift__": [7, 8], "__and__": [7, 8], "__rand__": [7, 8], "__or__": [7, 8], "__ror__": [7, 8], "__xor__": [7, 8], "__rxor__": [7, 8], "__invert__": [7, 8], "addition": [7, 8], "numer": 7, "oper": [7, 8, 10, 14], "d": [7, 9, 10, 14], "expect": 7, "19": [7, 10], "a_uint32": 7, "0x12345678": 7, "a_uint32_shift": 7, "2": [7, 8, 9, 11, 14], "0xfefefef": 7, "0x88888888": 7, "xor": 7, "swap": 7, "algorithm": 7, "a_uint8_1": 7, "0x12": 7, "a_uint8_2": 7, "0x34": 7, "305419896": 7, "00010010": 7, "01111000": 7, "lt": [7, 8], "610839792": 7, "00100100": 7, "11110000": 7, "34": 7, "amp": [7, 8], "10001000": 7, "18": 7, "52": [7, 10], "00110100": 7, "38": 7, "00100110": 7, "a_float16": 7, "14159": 7, "a_uint16": 7, "bitarrai": [8, 11], "ha": [8, 14], "In": [8, 11, 14], "case": [8, 11, 14], "doe": [8, 11, 14], "encod": [8, 9, 11, 14], "202": 8, "ba_empti": 8, "bv_empti": 8, "f": [8, 10, 14], "n": [8, 14], "list": [8, 14], "ba": 8, "255": [8, 9], "bv": 8, "hello": 8, "world": 8, "10": [8, 10, 14], "utf": [8, 9, 11], "unsupport": [8, 14], "howev": [8, 11, 14], "below": 8, "possibl": [8, 11, 14], "x01": 8, "x02": 8, "x03": 8, "xff": 8, "01101": 8, "01100101": 8, "01101100": 8, "01101111": 8, "00101100": 8, "01010111": 8, "01110010": 8, "01100100": 8, "00100001": 8, "x00": 8, "00000000": [8, 9], "00": 8, "xfeh": 8, "x00e": 8, "x00l": 8, "x00o": 8, "x00w": 8, "x00r": 8, "x00d": 8, "11111111": 8, "11111110": 8, "obtain": [8, 10], "gener": [8, 9, 10, 11, 14], "grab": 8, "see": [8, 14], "shown": 8, "octal": [8, 11], "hex": [8, 9, 11], "user": [8, 10, 14], "specifi": [8, 10, 14], "base": [8, 10, 11, 12, 14], "each": [8, 11, 14], "custom": 8, "separ": [8, 11], "per": [8, 11], "sep": [8, 9, 11], "spacer": 8, "final": [8, 9, 10, 11, 14], "13": 8, "the_bitvector": 8, "tobas": [8, 11], "64": [8, 11], "bytes_per_sep": [8, 9, 11], "4": 8, "oct": [8, 11], "_": [8, 9, 11], "bin": [8, 10, 11], "to_chararrai": [8, 11], "5iaguababsag8alaagafcabwbyagwazabzacea": 8, "0xfffe4800": 8, "65006c00": 8, "6c006f00": 8, "2c002000": 8, "57006f00": 8, "72006c00": 8, "64007300": 8, "2100": 8, "0o77777110000624003300015400067400130000400005340033600162000660003100016300020400": 8, "33333332_10200000_12110000_12300000_12300000_12330000_02300000_02000000_11130000_12330000_13020000_12300000_12100000_13030000_02010000": 8, "0b111111111111111001001000000000000110010100000000011011000000000001101100000000000110111100000000001011000000000000100000000000000101011100000000011011110000000001110010000000000110110000000000011001000000000001110011000000000010000100000000": 8, "mean": [8, 10], "cast": [8, 11], "non": [8, 10, 14], "align": 8, "addit": 8, "zero": [8, 11], "right": [8, 11], "pad": 8, "pleas": [8, 11], "current": [8, 11], "memori": [8, 11], "lead": [8, 11], "ambigu": 8, "result": 8, "multipl": 8, "theoret": 8, "terminu": 8, "get": [8, 12, 14], "priorit": [8, 11], "198": 8, "ba_1": 8, "bv_1_unalign": 8, "10101010": 8, "0001": 8, "ba_2": 8, "ba_2_with_align": 8, "bv_2": 8, "nunalign": 8, "nalign": 8, "unalign": 8, "xaa": 8, "x12": 8, "x10": 8, "unari": 8, "__eq__": 8, "__ne__": 8, "__lt__": 8, "__le__": 8, "__gt__": 8, "__ge__": 8, "shift": [8, 11], "index": [8, 11, 14], "iter": [8, 11, 14], "__getitem__": [8, 14], "__setitem__": [8, 14], "__delitem__": [8, 14], "__len__": [8, 14], "__iter__": [8, 14], "__str__": 8, "__repr__": 8, "__format__": 8, "concaten": [8, 11, 14], "__add__": 8, "__radd__": 8, "__iadd__": 8, "__mul__": 8, "__rmul__": 8, "__imul__": 8, "__contains__": 8, "__sizeof__": 8, "__copy__": 8, "__deepcopy__": 8, "__rlshift__": 8, "__rrshift__": 8, "24": 8, "initi": [8, 11], "111110000": 8, "bv2": 8, "bv3": 8, "bitwis": 8, "bv1": 8, "rang": [8, 11, 14], "len": [8, 10], "comparison": 8, "11111000": 8, "gt": 8, "11000000": 8, "00011000": 8, "00001100": 8, "00000110": 8, "00000011": 8, "0000": 8, "00110000": 8, "00010000": 8, "00111000": 8, "11100111": 8, "true": [8, 10, 11, 12, 14], "locat": 8, "partit": [8, 11], "contain": [9, 10, 11, 14], "configur": [9, 12], "automat": 9, "nativ": 9, "through": [9, 10, 14], "conversionconfig": [9, 12], "control": 9, "bits_to_pytyp": [9, 12], "pytype_to_bit": [9, 12], "singl": 9, "instanc": [9, 11, 12, 14], "ctypes_": [9, 12], "bits_to_ctyp": [9, 12], "ctype_to_bit": [9, 12], "combin": 9, "abov": [9, 14], "These": [9, 11], "count_bits_in_unit_typ": 9, "sint32": [9, 10], "float32": [9, 10], "buffer4": [9, 10], "pytypeaggreg": 9, "ctypeaggreg": 9, "c_int32": 9, "c_float": 9, "c_char": 9, "ytypeaggreg": 9, "mixedaggreg": 9, "pytype_aggreg": 9, "ctype_aggreg": 9, "ytype_aggreg": 9, "hp": 9, "mixedagg": 9, "512": 9, "14": 9, "382": 9, "0b0101": 9, "mixed_agg_as_bit": 9, "mixed_agg_from_bit": 9, "0x0000_0200_4048_f5c3_4142_0000_0200_4048_f5c3_4142_0000_017e_4048_f5c3_4142_5000_000f_f": 9, "0x0000_0200_4048_f5c3_4142_0000_0200_4048_f5c3_4142_0000_0200_4048_f5c3_4142_5000_000f_f": 9, "140000104904175": 9, "c_long": 9, "00000010": 9, "01000000": 9, "11110101": 9, "11000011": 9, "01000001": 9, "01000010": 9, "0101": 9, "vector": [11, 13], "optim": [11, 13], "util": [12, 13], "tool": 13, "integ": [10, 11, 13, 14], "aggreg": 13, "typing_redirect": 13, "usag": 14, "12": 14, "featur": 14, "without": 14, "break": 14, "requir": [10, 11, 14], "depend": 14, "extens": 14, "collect": [11, 14], "abc": [10, 11, 14], "batteri": 14, "older": 14, "export": 14, "typing_extens": 14, "arg": [11, 14], "kwarg": [11, 14], "special": [10, 14], "indic": [11, 14], "an": [10, 11, 12, 14], "unconstrain": 14, "everi": 14, "assum": [10, 14], "statement": 14, "point": [10, 14], "view": 14, "static": [10, 14], "checker": 14, "At": 14, "runtim": 14, "should": [10, 11, 14], "check": [11, 12, 14], "callabl": [12, 14], "forwardref": 14, "is_argu": 14, "is_class": 14, "fals": [10, 11, 12, 14], "_final": 14, "intern": [10, 14], "wrapper": 14, "hold": [10, 14], "forward": 14, "hashabl": 14, "map": [11, 14], "associ": 14, "kei": 14, "pair": 14, "concret": 14, "implement": [10, 11, 14], "except": [11, 14], "k": 14, "els": 14, "item": 14, "mutablemap": 14, "clear": [11, 14], "remov": [11, 14], "pop": [11, 14], "v": [10, 14], "return": [10, 11, 12, 14], "found": [11, 14], "given": [11, 14], "otherwis": [10, 11, 14], "keyerror": 14, "rais": [11, 14], "popitem": 14, "tupl": [11, 14], "empti": [11, 14], "setdefault": 14, "present": 14, "lack": 14, "mutablesequ": [11, 14], "sequenc": [10, 11, 14], "read": 14, "write": 14, "subclass": [10, 11, 14], "must": [11, 12, 14], "__new__": 14, "insert": [11, 14], "append": [11, 14], "extend": [11, 14], "element": [11, 14], "befor": [11, 12, 14], "last": [11, 14], "indexerror": [11, 14], "occurr": [11, 14], "valueerror": [11, 14], "revers": [11, 12, 14], "IN": 14, "place": 14, "paramspec": 14, "paramet": [10, 11, 12, 14], "specif": 14, "variabl": [10, 14], "prefer": 14, "construct": [11, 14], "dedic": 14, "syntax": 14, "alias": 14, "intfunc": 14, "p": 14, "11": [10, 14], "earlier": 14, "exist": 14, "primarili": 14, "benefit": 14, "thei": 14, "pattern": 14, "commonli": 14, "higher": 14, "order": [12, 14], "valid": 14, "argument": 14, "defin": [10, 14], "inform": [12, 14], "add_log": 14, "safe": 14, "add": 14, "log": 14, "inner": 14, "info": 14, "__name__": 14, "wa": 14, "call": [11, 14], "add_two": 14, "x": 14, "y": 14, "number": [10, 11, 12, 14], "togeth": [11, 14], "introspect": 14, "global": 14, "scope": 14, "pickl": 14, "posit": [11, 14], "keyword": 14, "protocol": [11, 14], "proto": 14, "Such": 14, "recogn": 14, "subtyp": 14, "duck": 14, "func": 14, "pass": 14, "pep": 14, "544": 14, "runtime_check": 14, "act": 14, "simpl": 14, "mind": 14, "presenc": 14, "ignor": 14, "genproto": 14, "overrid": 14, "count": [11, 14], "start": [11, 14], "stop": [11, 14], "recommend": 14, "typei": 14, "typevar": 14, "bound": [11, 14], "constrain": 14, "strsequenc": 14, "strorbytessequ": 14, "desir": [10, 14], "reusabl": 14, "manual": 14, "so": 14, "anyth": [10, 14], "exactli": 14, "serv": 14, "well": 14, "alia": [10, 11, 14], "definit": 14, "varianc": 14, "infer": 14, "infer_vari": 14, "mai": [11, 14], "explicitli": 14, "mark": 14, "covari": 14, "contravari": 14, "By": 14, "invari": 14, "484": 14, "695": 14, "uniontyp": 14, "604": 14, "union": [11, 12, 14], "get_arg": 14, "tp": 14, "substitut": 14, "perform": [11, 14], "simplif": 14, "assert": 14, "dict": [11, 14], "get_origin": 14, "unsubscript": 14, "classvar": 14, "42": 14, "get_type_hint": 14, "obj": [11, 14], "globaln": 14, "localn": 14, "include_extra": 14, "hint": [11, 14], "often": 14, "__annotations__": 14, "recurs": 14, "replac": [11, 14], "unless": [11, 14], "dictionari": 14, "inherit": 14, "member": [12, 14], "typeerror": 14, "bewar": 14, "behavior": [11, 14], "counterintuit": 14, "how": 14, "eval": 14, "exec": 14, "search": [11, 14], "local": 14, "attempt": 14, "made": [11, 14], "respect": [11, 14], "appear": 14, "overload": 14, "stub": 14, "file": 14, "row": 14, "utf8": 14, "regular": [10, 14], "goe": 14, "here": [11, 14], "retriev": 14, "get_overload": 14, "cl": [10, 11, 14], "isinst": [12, 14], "issubclass": [12, 14], "appli": 14, "veri": 14, "similar": 14, "trick": 14, "poni": 14, "closabl": 14, "close": 14, "open": 14, "warn": 14, "helper": 14, "trie": 14, "classproperti": [10, 14], "instance_of_union": 14, "byteconvert": 14, "__instancecheck__": 14, "__subclasscheck__": 14, "whether": [10, 12, 14], "dataclasstyp": 14, "dataclasstypemeta": 14, "frozendict": 14, "input_dict": 14, "hashablemap": 14, "build_prefix_tri": 14, "prefix": [11, 14], "build_suffix_tri": 14, "suffix": 14, "fget": [], "fset": [], "fdel": [], "doc": [], "emul": 14, "delet": [], "getter": 10, "setter": 10, "is_instance_of_union": 14, "union_typ": 14, "against": 14, "is_subclass_of_union": 14, "supertyp": 14, "twos_compl": [10, 14], "n_bit": 14, "complement": [10, 14], "width": [11, 14], "twos_complement_bit_length": 14, "notat": 14, "edit": 10, "treat": 10, "num_bit": [10, 12], "base_bit_typ": 10, "deriv": 10, "py_typ": 10, "readonli": 10, "classmethod": [10, 11, 12, 14], "from_bit": [10, 12], "deprec": 10, "instead": 10, "to_bit": [10, 12], "directli": 10, "complicatedli": 10, "avail": 10, "structpackedbittyp": 10, "struct": 10, "pack": 10, "unpack": 10, "packing_format_lett": 10, "format": 10, "letter": 10, "skip_struct_pack": 10, "skip": 10, "calcul": 10, "mro": 10, "packing_format": 10, "parent": 10, "most": 10, "bytes_to_bittyp": 10, "unitbyt": 10, "unittyp": 10, "pre": 10, "ident": 10, "num_bits_": 10, "name_": 10, "_buffer": 10, "bufferself": 10, "buffer1": 10, "buffer10": 10, "buffer100": 10, "buffer1000": 10, "buffer1024": 10, "buffer11": 10, "buffer12": 10, "buffer13": 10, "buffer14": 10, "buffer15": 10, "buffer16": 10, "buffer17": 10, "buffer18": 10, "buffer19": 10, "buffer2": 10, "buffer20": 10, "buffer200": 10, "buffer21": 10, "buffer22": 10, "buffer23": 10, "buffer24": 10, "buffer25": 10, "buffer250": 10, "buffer256": 10, "buffer26": 10, "buffer27": 10, "buffer28": 10, "buffer29": 10, "buffer3": 10, "buffer30": 10, "buffer31": 10, "buffer5": 10, "buffer50": 10, "buffer500": 10, "buffer512": 10, "buffer6": 10, "buffer64": 10, "buffer7": 10, "buffer9": 10, "bfloat16": 10, "googl": 10, "brain": 10, "expon": 10, "7": 10, "mantissa": 10, "num_exponent_bit": 10, "store": [10, 12], "num_mantissa_bit": 10, "fp24": 10, "amd": 10, "num_exponent_bits_": 10, "num_mantissa_bits_": 10, "packing_format_letter_": 10, "produc": 10, "after": [10, 11, 12], "_float": 10, "un": 10, "renam": 10, "to_binstr": 10, "23": 10, "unprefix": [10, 11], "float64": 10, "tf19": 10, "nvidia": 10, "tensorfloat": 10, "is_sign": 10, "min_bit_length": 10, "bin_format": 10, "signed_magnitud": 10, "ones_compl": 10, "minimum": 10, "possibli": 10, "front": 10, "to_bitstr": 10, "bit_length": 10, "rep_format": 10, "bitstr": 10, "length": 10, "to_pyint": 10, "int_format": 10, "chang": 10, "config": 10, "children": 10, "left": [10, 11], "taken": 10, "_sint": 10, "sint1": 10, "sint10": 10, "sint11": 10, "sint12": 10, "sint128": 10, "sint13": 10, "sint14": 10, "sint15": 10, "h": 10, "sint2": 10, "sint256": 10, "sint3": 10, "sint4": 10, "sint5": 10, "sint6": 10, "sint64": 10, "q": 10, "sint7": 10, "sint9": 10, "signedconfig": 10, "simultan": 10, "unadjust": 10, "signed_int_format": 10, "_uint": 10, "uint1": 10, "uint10": 10, "uint11": 10, "uint12": 10, "uint128": 10, "uint13": 10, "uint14": 10, "uint15": 10, "uint2": 10, "uint256": 10, "uint3": 10, "uint4": 10, "uint5": 10, "uint6": 10, "uint64": 10, "uint7": 10, "uint9": 10, "bitscast": 11, "mutabl": 11, "larg": 11, "superset": 11, "certain": 11, "applic": 11, "particular": 11, "document": 11, "stem": 11, "superclass": 11, "guarante": 11, "0x": 11, "split": 11, "chunk": 11, "punctuat": 11, "cast_if_not_bitarrai": 11, "alreadi": 11, "bitsconstruct": 11, "copi": 11, "shallow": 11, "inclus": 11, "exclus": 11, "within": 11, "endswith": 11, "substr": 11, "them": 11, "find": 11, "up": 11, "from01": 11, "from_byt": [11, 12], "byte_arr": 11, "reverse_endian": [11, 12], "from_chararrai": 11, "char_arrai": 11, "bitvector_with_bitarray_speedup": 11, "charact": 11, "build": 11, "until": 11, "form": 11, "from_int": 11, "frombas": 11, "0b": 11, "0o": 11, "frombin": 11, "fromhex": 11, "hexadecim": 11, "fromoct": 11, "fromsiz": 11, "subsequ": 11, "leftmost": 11, "join": 11, "lpad": 11, "fillbit": 11, "lstrip": 11, "contigu": 11, "part": 11, "itself": 11, "entir": 11, "rightmost": 11, "old": 11, "maximum": 11, "maxim": 11, "rfind": 11, "One": 11, "rindex": 11, "rpad": 11, "rpartit": 11, "rstrip": 11, "trail": 11, "startswith": 11, "strip": 11, "to01": 11, "to_byt": [11, 12], "decod": 11, "to_int": 11, "signed": 11, "power": 11, "bitvectorsubtyp": 11, "__bits__": 11, "want": 11, "origin": 11, "mani": 11, "becaus": 11, "less": 11, "implicitli": 11, "seri": 11, "primit": 12, "get_conversion_info": 12, "conversioninfo": 12, "has_suitable_convers": 12, "set_conversion_info": 12, "conversion_info": 12, "about": 12, "bytes_obj": 12, "num_byt": 12, "typeinst": 12, "pytypemeta": 12, "isbyteconvert": 12, "bits_obj": 12, "py_prim_typ": 12, "pytypewithdefaultbyt": 12, "thee": 12, "bytes_to_pytyp": 12, "py_prim": 12, "pytype_to_byt": 12, "ctype_typ": 12, "_simplecdata": 12, "arrai": 12, "bytes_to_ctyp": 12, "ctype_obj": 12, "ctype_to_byt": 12, "reverse_bytes_unit": 12, "unit": 12, "reverse_ctype_endian": 12, "ctype_inst": 12}, "objects": {"bytemaker.bittypes": [[10, 0, 0, "-", "bittype"], [10, 0, 0, "-", "buffer"], [10, 0, 0, "-", "float"], [10, 0, 0, "-", "int"]], "bytemaker.bittypes.bittype": [[10, 1, 1, "", "BitType"], [10, 1, 1, "", "StructPackedBitType"], [10, 5, 1, "", "bytes_to_bittype"]], "bytemaker.bittypes.bittype.BitType": [[10, 2, 1, "", "base_bit_type"], [10, 3, 1, "", "bits"], [10, 3, 1, "", "endianness"], [10, 4, 1, "", "from_bits"], [10, 4, 1, "", "num_bits"], [10, 2, 1, "", "py_type"], [10, 4, 1, "", "to_bits"], [10, 3, 1, "", "value"]], "bytemaker.bittypes.bittype.StructPackedBitType": [[10, 3, 1, "", "packing_format"], [10, 2, 1, "", "packing_format_letter"], [10, 3, 1, "", "skip_struct_packing"], [10, 3, 1, "", "value"]], "bytemaker.bittypes.buffer": [[10, 1, 1, "", "Buffer"], [10, 1, 1, "", "Buffer1"], [10, 1, 1, "", "Buffer10"], [10, 1, 1, "", "Buffer100"], [10, 1, 1, "", "Buffer1000"], [10, 1, 1, "", "Buffer1024"], [10, 1, 1, "", "Buffer11"], [10, 1, 1, "", "Buffer12"], [10, 1, 1, "", "Buffer128"], [10, 1, 1, "", "Buffer13"], [10, 1, 1, "", "Buffer14"], [10, 1, 1, "", "Buffer15"], [10, 1, 1, "", "Buffer16"], [10, 1, 1, "", "Buffer17"], [10, 1, 1, "", "Buffer18"], [10, 1, 1, "", "Buffer19"], [10, 1, 1, "", "Buffer2"], [10, 1, 1, "", "Buffer20"], [10, 1, 1, "", "Buffer200"], [10, 1, 1, "", "Buffer21"], [10, 1, 1, "", "Buffer22"], [10, 1, 1, "", "Buffer23"], [10, 1, 1, "", "Buffer24"], [10, 1, 1, "", "Buffer25"], [10, 1, 1, "", "Buffer250"], [10, 1, 1, "", "Buffer256"], [10, 1, 1, "", "Buffer26"], [10, 1, 1, "", "Buffer27"], [10, 1, 1, "", "Buffer28"], [10, 1, 1, "", "Buffer29"], [10, 1, 1, "", "Buffer3"], [10, 1, 1, "", "Buffer30"], [10, 1, 1, "", "Buffer31"], [10, 1, 1, "", "Buffer32"], [10, 1, 1, "", "Buffer4"], [10, 1, 1, "", "Buffer5"], [10, 1, 1, "", "Buffer50"], [10, 1, 1, "", "Buffer500"], [10, 1, 1, "", "Buffer512"], [10, 1, 1, "", "Buffer6"], [10, 1, 1, "", "Buffer64"], [10, 1, 1, "", "Buffer7"], [10, 1, 1, "", "Buffer8"], [10, 1, 1, "", "Buffer9"]], "bytemaker.bittypes.buffer.Buffer": [[10, 2, 1, "", "base_bit_type"], [10, 2, 1, "", "py_type"], [10, 4, 1, "", "specialize"], [10, 3, 1, "", "value"]], "bytemaker.bittypes.float": [[10, 1, 1, "", "BFloat16"], [10, 1, 1, "", "FP24"], [10, 1, 1, "", "Float"], [10, 1, 1, "", "Float16"], [10, 1, 1, "", "Float32"], [10, 1, 1, "", "Float64"], [10, 1, 1, "", "TF19"]], "bytemaker.bittypes.float.BFloat16": [[10, 2, 1, "", "num_exponent_bits"], [10, 2, 1, "", "num_mantissa_bits"]], "bytemaker.bittypes.float.FP24": [[10, 2, 1, "", "num_exponent_bits"], [10, 2, 1, "", "num_mantissa_bits"]], "bytemaker.bittypes.float.Float": [[10, 2, 1, "", "base_bit_type"], [10, 4, 1, "", "num_bits"], [10, 2, 1, "", "num_exponent_bits"], [10, 2, 1, "", "num_mantissa_bits"], [10, 2, 1, "", "py_type"], [10, 4, 1, "", "specialize"], [10, 4, 1, "", "to_binstring"], [10, 3, 1, "", "value"]], "bytemaker.bittypes.float.Float16": [[10, 2, 1, "", "num_exponent_bits"], [10, 2, 1, "", "num_mantissa_bits"], [10, 2, 1, "", "packing_format_letter"]], "bytemaker.bittypes.float.Float32": [[10, 2, 1, "", "num_exponent_bits"], [10, 2, 1, "", "num_mantissa_bits"], [10, 2, 1, "", "packing_format_letter"]], "bytemaker.bittypes.float.Float64": [[10, 2, 1, "", "num_exponent_bits"], [10, 2, 1, "", "num_mantissa_bits"], [10, 2, 1, "", "packing_format_letter"]], "bytemaker.bittypes.float.TF19": [[10, 2, 1, "", "num_exponent_bits"], [10, 2, 1, "", "num_mantissa_bits"]], "bytemaker.bittypes.int": [[10, 1, 1, "", "Int"], [10, 1, 1, "", "SInt"], [10, 1, 1, "", "SInt1"], [10, 1, 1, "", "SInt10"], [10, 1, 1, "", "SInt11"], [10, 1, 1, "", "SInt12"], [10, 1, 1, "", "SInt128"], [10, 1, 1, "", "SInt13"], [10, 1, 1, "", "SInt14"], [10, 1, 1, "", "SInt15"], [10, 1, 1, "", "SInt16"], [10, 1, 1, "", "SInt2"], [10, 1, 1, "", "SInt256"], [10, 1, 1, "", "SInt3"], [10, 1, 1, "", "SInt32"], [10, 1, 1, "", "SInt4"], [10, 1, 1, "", "SInt5"], [10, 1, 1, "", "SInt6"], [10, 1, 1, "", "SInt64"], [10, 1, 1, "", "SInt7"], [10, 1, 1, "", "SInt8"], [10, 1, 1, "", "SInt9"], [10, 1, 1, "", "SignedConfig"], [10, 1, 1, "", "UInt"], [10, 1, 1, "", "UInt1"], [10, 1, 1, "", "UInt10"], [10, 1, 1, "", "UInt11"], [10, 1, 1, "", "UInt12"], [10, 1, 1, "", "UInt128"], [10, 1, 1, "", "UInt13"], [10, 1, 1, "", "UInt14"], [10, 1, 1, "", "UInt15"], [10, 1, 1, "", "UInt16"], [10, 1, 1, "", "UInt2"], [10, 1, 1, "", "UInt256"], [10, 1, 1, "", "UInt3"], [10, 1, 1, "", "UInt32"], [10, 1, 1, "", "UInt4"], [10, 1, 1, "", "UInt5"], [10, 1, 1, "", "UInt6"], [10, 1, 1, "", "UInt64"], [10, 1, 1, "", "UInt7"], [10, 1, 1, "", "UInt8"], [10, 1, 1, "", "UInt9"]], "bytemaker.bittypes.int.Int": [[10, 2, 1, "", "is_signed"], [10, 4, 1, "", "min_bit_length"], [10, 2, 1, "", "py_type"], [10, 4, 1, "", "to_bitstring"], [10, 4, 1, "", "to_pyint"]], "bytemaker.bittypes.int.SInt": [[10, 2, 1, "", "base_bit_type"], [10, 2, 1, "", "is_signed"], [10, 4, 1, "", "specialize"], [10, 3, 1, "", "value"]], "bytemaker.bittypes.int.SInt16": [[10, 2, 1, "", "packing_format_letter"], [10, 3, 1, "", "skip_struct_packing"]], "bytemaker.bittypes.int.SInt32": [[10, 2, 1, "", "packing_format_letter"], [10, 3, 1, "", "skip_struct_packing"]], "bytemaker.bittypes.int.SInt64": [[10, 2, 1, "", "packing_format_letter"], [10, 3, 1, "", "skip_struct_packing"]], "bytemaker.bittypes.int.SInt8": [[10, 2, 1, "", "packing_format_letter"], [10, 3, 1, "", "skip_struct_packing"]], "bytemaker.bittypes.int.SignedConfig": [[10, 2, 1, "", "signed_int_format"]], "bytemaker.bittypes.int.UInt": [[10, 2, 1, "", "base_bit_type"], [10, 2, 1, "", "is_signed"], [10, 4, 1, "", "specialize"], [10, 3, 1, "", "value"]], "bytemaker.bittypes.int.UInt16": [[10, 2, 1, "", "packing_format_letter"]], "bytemaker.bittypes.int.UInt32": [[10, 2, 1, "", "packing_format_letter"]], "bytemaker.bittypes.int.UInt64": [[10, 2, 1, "", "packing_format_letter"]], "bytemaker.bittypes.int.UInt8": [[10, 2, 1, "", "packing_format_letter"]], "bytemaker.bitvector": [[11, 0, 0, "-", "bitvector"], [11, 0, 0, "-", "bitvector_with_bitarray_speedup"]], "bytemaker.bitvector.bitvector": [[11, 1, 1, "", "BitVector"], [11, 1, 1, "", "BitsCastable"]], "bytemaker.bitvector.bitvector.BitVector": [[11, 4, 1, "", "append"], [11, 4, 1, "", "bin"], [11, 4, 1, "", "cast_if_not_bitarray"], [11, 4, 1, "", "clear"], [11, 4, 1, "", "copy"], [11, 4, 1, "", "count"], [11, 4, 1, "", "endswith"], [11, 4, 1, "", "extend"], [11, 4, 1, "", "find"], [11, 4, 1, "", "from01"], [11, 4, 1, "", "from_bytes"], [11, 4, 1, "", "from_chararray"], [11, 4, 1, "", "from_int"], [11, 4, 1, "", "frombase"], [11, 4, 1, "", "frombin"], [11, 4, 1, "", "fromhex"], [11, 4, 1, "", "fromoct"], [11, 4, 1, "", "fromsize"], [11, 4, 1, "", "hex"], [11, 4, 1, "", "index"], [11, 4, 1, "", "insert"], [11, 4, 1, "", "join"], [11, 4, 1, "", "lpad"], [11, 4, 1, "", "lstrip"], [11, 4, 1, "", "oct"], [11, 4, 1, "", "partition"], [11, 4, 1, "", "pop"], [11, 4, 1, "", "remove"], [11, 4, 1, "", "replace"], [11, 4, 1, "", "reverse"], [11, 4, 1, "", "rfind"], [11, 4, 1, "", "rindex"], [11, 4, 1, "", "rpad"], [11, 4, 1, "", "rpartition"], [11, 4, 1, "", "rstrip"], [11, 4, 1, "", "startswith"], [11, 4, 1, "", "strip"], [11, 4, 1, "", "to01"], [11, 4, 1, "", "to_bytes"], [11, 4, 1, "", "to_chararray"], [11, 4, 1, "", "to_int"], [11, 4, 1, "", "tobase"]], "bytemaker.bitvector.bitvector_with_bitarray_speedup": [[11, 1, 1, "", "BitVector"], [11, 1, 1, "", "BitsCastable"], [11, 6, 1, "", "BitsConstructible"]], "bytemaker.bitvector.bitvector_with_bitarray_speedup.BitVector": [[11, 4, 1, "", "append"], [11, 4, 1, "", "bin"], [11, 4, 1, "", "cast_if_not_bitarray"], [11, 4, 1, "", "clear"], [11, 4, 1, "", "copy"], [11, 4, 1, "", "count"], [11, 4, 1, "", "endswith"], [11, 4, 1, "", "extend"], [11, 4, 1, "", "find"], [11, 4, 1, "", "from01"], [11, 4, 1, "", "from_bytes"], [11, 4, 1, "", "from_chararray"], [11, 4, 1, "", "from_int"], [11, 4, 1, "", "frombase"], [11, 4, 1, "", "frombin"], [11, 4, 1, "", "fromhex"], [11, 4, 1, "", "fromoct"], [11, 4, 1, "", "fromsize"], [11, 4, 1, "", "hex"], [11, 4, 1, "", "index"], [11, 4, 1, "", "insert"], [11, 4, 1, "", "join"], [11, 4, 1, "", "lpad"], [11, 4, 1, "", "lstrip"], [11, 4, 1, "", "oct"], [11, 4, 1, "", "partition"], [11, 4, 1, "", "pop"], [11, 4, 1, "", "remove"], [11, 4, 1, "", "replace"], [11, 4, 1, "", "reverse"], [11, 4, 1, "", "rfind"], [11, 4, 1, "", "rindex"], [11, 4, 1, "", "rpad"], [11, 4, 1, "", "rpartition"], [11, 4, 1, "", "rstrip"], [11, 4, 1, "", "startswith"], [11, 4, 1, "", "strip"], [11, 4, 1, "", "to01"], [11, 4, 1, "", "to_bytes"], [11, 4, 1, "", "to_chararray"], [11, 4, 1, "", "to_int"], [11, 4, 1, "", "tobase"]], "bytemaker.conversions": [[12, 0, 0, "-", "ctypes_"], [12, 0, 0, "-", "pytypes"]], "bytemaker.conversions.ctypes_": [[12, 5, 1, "", "bits_to_ctype"], [12, 5, 1, "", "bytes_to_ctype"], [12, 5, 1, "", "ctype_to_bits"], [12, 5, 1, "", "ctype_to_bytes"], [12, 5, 1, "", "reverse_bytes_unit"], [12, 5, 1, "", "reverse_ctype_endianness"]], "bytemaker.conversions.pytypes": [[12, 1, 1, "", "ConversionConfig"], [12, 1, 1, "", "ConversionInfo"], [12, 1, 1, "", "PyType"], [12, 1, 1, "", "PyTypeMeta"], [12, 5, 1, "", "bits_to_pytype"], [12, 5, 1, "", "bytes_to_pytype"], [12, 5, 1, "", "pytype_to_bits"], [12, 5, 1, "", "pytype_to_bytes"]], "bytemaker.conversions.pytypes.ConversionConfig": [[12, 4, 1, "", "get_conversion_info"], [12, 4, 1, "", "has_suitable_conversion"], [12, 4, 1, "", "set_conversion_info"]], "bytemaker.conversions.pytypes.ConversionInfo": [[12, 2, 1, "", "from_bits"], [12, 4, 1, "", "from_bytes"], [12, 2, 1, "", "num_bits"], [12, 4, 1, "", "num_bytes"], [12, 2, 1, "", "pytype"], [12, 2, 1, "", "to_bits"], [12, 4, 1, "", "to_bytes"]], "bytemaker": [[14, 0, 0, "-", "typing_redirect"], [14, 0, 0, "-", "utils"]], "bytemaker.typing_redirect": [[14, 1, 1, "", "Any"], [14, 1, 1, "", "Buffer"], [14, 1, 1, "", "Callable"], [14, 1, 1, "", "ForwardRef"], [14, 1, 1, "", "Hashable"], [14, 1, 1, "", "Iterable"], [14, 1, 1, "", "Mapping"], [14, 1, 1, "", "MutableMapping"], [14, 1, 1, "", "MutableSequence"], [14, 1, 1, "", "ParamSpec"], [14, 1, 1, "", "Protocol"], [14, 1, 1, "", "Sequence"], [14, 1, 1, "", "TypeIs"], [14, 1, 1, "", "TypeVar"], [14, 1, 1, "", "UnionType"], [14, 5, 1, "", "get_args"], [14, 5, 1, "", "get_origin"], [14, 5, 1, "", "get_type_hints"], [14, 5, 1, "", "overload"], [14, 5, 1, "", "runtime_checkable"]], "bytemaker.typing_redirect.Mapping": [[14, 4, 1, "", "get"], [14, 4, 1, "", "items"], [14, 4, 1, "", "keys"], [14, 4, 1, "", "values"]], "bytemaker.typing_redirect.MutableMapping": [[14, 4, 1, "", "clear"], [14, 4, 1, "", "pop"], [14, 4, 1, "", "popitem"], [14, 4, 1, "", "setdefault"], [14, 4, 1, "", "update"]], "bytemaker.typing_redirect.MutableSequence": [[14, 4, 1, "", "append"], [14, 4, 1, "", "clear"], [14, 4, 1, "", "extend"], [14, 4, 1, "", "insert"], [14, 4, 1, "", "pop"], [14, 4, 1, "", "remove"], [14, 4, 1, "", "reverse"]], "bytemaker.typing_redirect.ParamSpec": [[14, 2, 1, "", "args"], [14, 2, 1, "", "kwargs"]], "bytemaker.typing_redirect.Sequence": [[14, 4, 1, "", "count"], [14, 4, 1, "", "index"]], "bytemaker.utils": [[14, 1, 1, "", "ByteConvertible"], [14, 1, 1, "", "DataClassType"], [14, 1, 1, "", "DataClassTypeMeta"], [14, 1, 1, "", "FrozenDict"], [14, 1, 1, "", "HashableMapping"], [14, 1, 1, "", "Trie"], [14, 1, 1, "", "classproperty"], [14, 5, 1, "", "is_instance_of_union"], [14, 5, 1, "", "is_subclass_of_union"], [14, 5, 1, "", "twos_complement"], [14, 5, 1, "", "twos_complement_bit_length"]], "bytemaker.utils.FrozenDict": [[14, 4, 1, "", "items"]], "bytemaker.utils.Trie": [[14, 4, 1, "", "build_prefix_trie"], [14, 4, 1, "", "build_suffix_trie"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:attribute", "3": "py:property", "4": "py:method", "5": "py:function", "6": "py:data"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "attribute", "Python attribute"], "3": ["py", "property", "Python property"], "4": ["py", "method", "Python method"], "5": ["py", "function", "Python function"], "6": ["py", "data", "Python data"]}, "titleterms": {"bytemak": [1, 2], "document": 1, "what": 1, "i": 1, "can": 1, "you": 1, "do": 1, "bittyp": [3, 7, 10, 13], "bitvector": [4, 8, 11, 13], "introduct": 4, "convers": [5, 9, 12, 13], "quickstart": 6, "overview": 6, "instal": 6, "exampl": 6, "construct": [7, 8], "magic": [7, 8], "method": [7, 8], "present": 8, "option": 8, "__bytes__": 8, "buffer": [8, 10], "protocol": 8, "warn": 8, "packag": [10, 11], "modul": [10, 11, 12, 13, 14], "float": 10, "int": 10, "sint": 10, "uint": 10, "string": 10, "pytyp": 12, "ctype": 12, "aggreg": 12, "type": 12, "api": 13, "refer": 13, "subpackag": 13, "direct": 13, "other": [13, 14], "typing_redirect": 14, "util": 14, "class": 10, "attribut": [10, 12], "instanc": 10}, "envversion": {"sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.viewcode": 1, "sphinx.ext.intersphinx": 1, "nbsphinx": 4, "sphinx": 58}, "alltitles": {"Bytemaker documentation": [[1, "bytemaker-documentation"]], "What is it?": [[1, "what-is-it"]], "What can you do with it?": [[1, "what-can-you-do-with-it"]], "bytemaker": [[2, "bytemaker"]], "BitTypes": [[3, "bittypes"], [7, "BitTypes"]], "BitVector": [[4, "bitvector"], [8, "BitVector"], [11, "module-bytemaker.bitvector.bitvector"]], "Introduction": [[4, "introduction"]], "Conversions": [[5, "conversions"], [9, "Conversions"], [12, "conversions"], [13, "conversions"]], "Quickstart": [[6, "quickstart"], [6, null]], "Overview": [[6, "overview"]], "Installation": [[6, "installation"]], "Example": [[6, "example"]], "Construction": [[7, "Construction"], [8, "Construction"]], "Magic Methods": [[7, "Magic-Methods"], [8, "Magic-Methods"]], "Presentation Options": [[8, "Presentation-Options"]], "__bytes__ and the buffer protocol": [[8, "__bytes__-and-the-buffer-protocol"]], "Warning": [[8, "Warning"]], "bittypes package": [[10, "bittypes-package"]], "Modules": [[10, "modules"], [11, "modules"], [12, "modules"]], "BitType": [[10, "module-bytemaker.bittypes.bittype"]], "Class Attributes:": [[10, "class-attributes"], [10, "id1"], [10, "id3"], [10, "id5"]], "Instance Attributes": [[10, "instance-attributes"], [10, "id2"], [10, "id4"], [10, "id6"]], "Buffer": [[10, "module-bytemaker.bittypes.buffer"]], "Float": [[10, "module-bytemaker.bittypes.float"]], "Int (SInt and UInt)": [[10, "module-bytemaker.bittypes.int"]], "String": [[10, "string"]], "bitvector package": [[11, "bitvector-package"]], "PyTypes": [[12, "module-bytemaker.conversions.pytypes"]], "Attributes:": [[12, "attributes"]], "CTypes": [[12, "module-bytemaker.conversions.ctypes_"]], "Aggregate Types": [[12, "aggregate-types"]], "API Reference": [[13, "api-reference"]], "Subpackages": [[13, "subpackages"]], "bitvector": [[13, "bitvector"]], "bittypes": [[13, "bittypes"]], "Direct Modules": [[13, "direct-modules"]], "Other Modules": [[13, "other-modules"], [14, "other-modules"]], "typing_redirect": [[14, "typing-redirect"]], "utils": [[14, "utils"]]}, "indexentries": {"bfloat16 (class in bytemaker.bittypes.float)": [[10, "bytemaker.bittypes.float.BFloat16"]], "bittype (class in bytemaker.bittypes.bittype)": [[10, "bytemaker.bittypes.bittype.BitType"]], "buffer (class in bytemaker.bittypes.buffer)": [[10, "bytemaker.bittypes.buffer.Buffer"]], "buffer1 (class in bytemaker.bittypes.buffer)": [[10, "bytemaker.bittypes.buffer.Buffer1"]], "buffer10 (class in bytemaker.bittypes.buffer)": [[10, "bytemaker.bittypes.buffer.Buffer10"]], "buffer100 (class in bytemaker.bittypes.buffer)": [[10, "bytemaker.bittypes.buffer.Buffer100"]], "buffer1000 (class in bytemaker.bittypes.buffer)": [[10, "bytemaker.bittypes.buffer.Buffer1000"]], "buffer1024 (class in bytemaker.bittypes.buffer)": [[10, "bytemaker.bittypes.buffer.Buffer1024"]], "buffer11 (class in bytemaker.bittypes.buffer)": [[10, "bytemaker.bittypes.buffer.Buffer11"]], "buffer12 (class in bytemaker.bittypes.buffer)": [[10, "bytemaker.bittypes.buffer.Buffer12"]], "buffer128 (class in bytemaker.bittypes.buffer)": [[10, "bytemaker.bittypes.buffer.Buffer128"]], "buffer13 (class in bytemaker.bittypes.buffer)": [[10, "bytemaker.bittypes.buffer.Buffer13"]], "buffer14 (class in bytemaker.bittypes.buffer)": [[10, "bytemaker.bittypes.buffer.Buffer14"]], "buffer15 (class in bytemaker.bittypes.buffer)": [[10, "bytemaker.bittypes.buffer.Buffer15"]], "buffer16 (class in bytemaker.bittypes.buffer)": [[10, "bytemaker.bittypes.buffer.Buffer16"]], "buffer17 (class in bytemaker.bittypes.buffer)": [[10, "bytemaker.bittypes.buffer.Buffer17"]], "buffer18 (class in bytemaker.bittypes.buffer)": [[10, "bytemaker.bittypes.buffer.Buffer18"]], "buffer19 (class in bytemaker.bittypes.buffer)": [[10, "bytemaker.bittypes.buffer.Buffer19"]], "buffer2 (class in bytemaker.bittypes.buffer)": [[10, "bytemaker.bittypes.buffer.Buffer2"]], "buffer20 (class in bytemaker.bittypes.buffer)": [[10, "bytemaker.bittypes.buffer.Buffer20"]], "buffer200 (class in bytemaker.bittypes.buffer)": [[10, "bytemaker.bittypes.buffer.Buffer200"]], "buffer21 (class in bytemaker.bittypes.buffer)": [[10, "bytemaker.bittypes.buffer.Buffer21"]], "buffer22 (class in bytemaker.bittypes.buffer)": [[10, "bytemaker.bittypes.buffer.Buffer22"]], "buffer23 (class in bytemaker.bittypes.buffer)": [[10, "bytemaker.bittypes.buffer.Buffer23"]], "buffer24 (class in bytemaker.bittypes.buffer)": [[10, "bytemaker.bittypes.buffer.Buffer24"]], "buffer25 (class in bytemaker.bittypes.buffer)": [[10, "bytemaker.bittypes.buffer.Buffer25"]], "buffer250 (class in bytemaker.bittypes.buffer)": [[10, "bytemaker.bittypes.buffer.Buffer250"]], "buffer256 (class in bytemaker.bittypes.buffer)": [[10, "bytemaker.bittypes.buffer.Buffer256"]], "buffer26 (class in bytemaker.bittypes.buffer)": [[10, "bytemaker.bittypes.buffer.Buffer26"]], "buffer27 (class in bytemaker.bittypes.buffer)": [[10, "bytemaker.bittypes.buffer.Buffer27"]], "buffer28 (class in bytemaker.bittypes.buffer)": [[10, "bytemaker.bittypes.buffer.Buffer28"]], "buffer29 (class in bytemaker.bittypes.buffer)": [[10, "bytemaker.bittypes.buffer.Buffer29"]], "buffer3 (class in bytemaker.bittypes.buffer)": [[10, "bytemaker.bittypes.buffer.Buffer3"]], "buffer30 (class in bytemaker.bittypes.buffer)": [[10, "bytemaker.bittypes.buffer.Buffer30"]], "buffer31 (class in bytemaker.bittypes.buffer)": [[10, "bytemaker.bittypes.buffer.Buffer31"]], "buffer32 (class in bytemaker.bittypes.buffer)": [[10, "bytemaker.bittypes.buffer.Buffer32"]], "buffer4 (class in bytemaker.bittypes.buffer)": [[10, "bytemaker.bittypes.buffer.Buffer4"]], "buffer5 (class in bytemaker.bittypes.buffer)": [[10, "bytemaker.bittypes.buffer.Buffer5"]], "buffer50 (class in bytemaker.bittypes.buffer)": [[10, "bytemaker.bittypes.buffer.Buffer50"]], "buffer500 (class in bytemaker.bittypes.buffer)": [[10, "bytemaker.bittypes.buffer.Buffer500"]], "buffer512 (class in bytemaker.bittypes.buffer)": [[10, "bytemaker.bittypes.buffer.Buffer512"]], "buffer6 (class in bytemaker.bittypes.buffer)": [[10, "bytemaker.bittypes.buffer.Buffer6"]], "buffer64 (class in bytemaker.bittypes.buffer)": [[10, "bytemaker.bittypes.buffer.Buffer64"]], "buffer7 (class in bytemaker.bittypes.buffer)": [[10, "bytemaker.bittypes.buffer.Buffer7"]], "buffer8 (class in bytemaker.bittypes.buffer)": [[10, "bytemaker.bittypes.buffer.Buffer8"]], "buffer9 (class in bytemaker.bittypes.buffer)": [[10, "bytemaker.bittypes.buffer.Buffer9"]], "fp24 (class in bytemaker.bittypes.float)": [[10, "bytemaker.bittypes.float.FP24"]], "float (class in bytemaker.bittypes.float)": [[10, "bytemaker.bittypes.float.Float"]], "float16 (class in bytemaker.bittypes.float)": [[10, "bytemaker.bittypes.float.Float16"]], "float32 (class in bytemaker.bittypes.float)": [[10, "bytemaker.bittypes.float.Float32"]], "float64 (class in bytemaker.bittypes.float)": [[10, "bytemaker.bittypes.float.Float64"]], "int (class in bytemaker.bittypes.int)": [[10, "bytemaker.bittypes.int.Int"]], "sint (class in bytemaker.bittypes.int)": [[10, "bytemaker.bittypes.int.SInt"]], "sint1 (class in bytemaker.bittypes.int)": [[10, "bytemaker.bittypes.int.SInt1"]], "sint10 (class in bytemaker.bittypes.int)": [[10, "bytemaker.bittypes.int.SInt10"]], "sint11 (class in bytemaker.bittypes.int)": [[10, "bytemaker.bittypes.int.SInt11"]], "sint12 (class in bytemaker.bittypes.int)": [[10, "bytemaker.bittypes.int.SInt12"]], "sint128 (class in bytemaker.bittypes.int)": [[10, "bytemaker.bittypes.int.SInt128"]], "sint13 (class in bytemaker.bittypes.int)": [[10, "bytemaker.bittypes.int.SInt13"]], "sint14 (class in bytemaker.bittypes.int)": [[10, "bytemaker.bittypes.int.SInt14"]], "sint15 (class in bytemaker.bittypes.int)": [[10, "bytemaker.bittypes.int.SInt15"]], "sint16 (class in bytemaker.bittypes.int)": [[10, "bytemaker.bittypes.int.SInt16"]], "sint2 (class in bytemaker.bittypes.int)": [[10, "bytemaker.bittypes.int.SInt2"]], "sint256 (class in bytemaker.bittypes.int)": [[10, "bytemaker.bittypes.int.SInt256"]], "sint3 (class in bytemaker.bittypes.int)": [[10, "bytemaker.bittypes.int.SInt3"]], "sint32 (class in bytemaker.bittypes.int)": [[10, "bytemaker.bittypes.int.SInt32"]], "sint4 (class in bytemaker.bittypes.int)": [[10, "bytemaker.bittypes.int.SInt4"]], "sint5 (class in bytemaker.bittypes.int)": [[10, "bytemaker.bittypes.int.SInt5"]], "sint6 (class in bytemaker.bittypes.int)": [[10, "bytemaker.bittypes.int.SInt6"]], "sint64 (class in bytemaker.bittypes.int)": [[10, "bytemaker.bittypes.int.SInt64"]], "sint7 (class in bytemaker.bittypes.int)": [[10, "bytemaker.bittypes.int.SInt7"]], "sint8 (class in bytemaker.bittypes.int)": [[10, "bytemaker.bittypes.int.SInt8"]], "sint9 (class in bytemaker.bittypes.int)": [[10, "bytemaker.bittypes.int.SInt9"]], "signedconfig (class in bytemaker.bittypes.int)": [[10, "bytemaker.bittypes.int.SignedConfig"]], "structpackedbittype (class in bytemaker.bittypes.bittype)": [[10, "bytemaker.bittypes.bittype.StructPackedBitType"]], "tf19 (class in bytemaker.bittypes.float)": [[10, "bytemaker.bittypes.float.TF19"]], "uint (class in bytemaker.bittypes.int)": [[10, "bytemaker.bittypes.int.UInt"]], "uint1 (class in bytemaker.bittypes.int)": [[10, "bytemaker.bittypes.int.UInt1"]], "uint10 (class in bytemaker.bittypes.int)": [[10, "bytemaker.bittypes.int.UInt10"]], "uint11 (class in bytemaker.bittypes.int)": [[10, "bytemaker.bittypes.int.UInt11"]], "uint12 (class in bytemaker.bittypes.int)": [[10, "bytemaker.bittypes.int.UInt12"]], "uint128 (class in bytemaker.bittypes.int)": [[10, "bytemaker.bittypes.int.UInt128"]], "uint13 (class in bytemaker.bittypes.int)": [[10, "bytemaker.bittypes.int.UInt13"]], "uint14 (class in bytemaker.bittypes.int)": [[10, "bytemaker.bittypes.int.UInt14"]], "uint15 (class in bytemaker.bittypes.int)": [[10, "bytemaker.bittypes.int.UInt15"]], "uint16 (class in bytemaker.bittypes.int)": [[10, "bytemaker.bittypes.int.UInt16"]], "uint2 (class in bytemaker.bittypes.int)": [[10, "bytemaker.bittypes.int.UInt2"]], "uint256 (class in bytemaker.bittypes.int)": [[10, "bytemaker.bittypes.int.UInt256"]], "uint3 (class in bytemaker.bittypes.int)": [[10, "bytemaker.bittypes.int.UInt3"]], "uint32 (class in bytemaker.bittypes.int)": [[10, "bytemaker.bittypes.int.UInt32"]], "uint4 (class in bytemaker.bittypes.int)": [[10, "bytemaker.bittypes.int.UInt4"]], "uint5 (class in bytemaker.bittypes.int)": [[10, "bytemaker.bittypes.int.UInt5"]], "uint6 (class in bytemaker.bittypes.int)": [[10, "bytemaker.bittypes.int.UInt6"]], "uint64 (class in bytemaker.bittypes.int)": [[10, "bytemaker.bittypes.int.UInt64"]], "uint7 (class in bytemaker.bittypes.int)": [[10, "bytemaker.bittypes.int.UInt7"]], "uint8 (class in bytemaker.bittypes.int)": [[10, "bytemaker.bittypes.int.UInt8"]], "uint9 (class in bytemaker.bittypes.int)": [[10, "bytemaker.bittypes.int.UInt9"]], "base_bit_type (bytemaker.bittypes.bittype.bittype attribute)": [[10, "bytemaker.bittypes.bittype.BitType.base_bit_type"]], "base_bit_type (bytemaker.bittypes.buffer.buffer attribute)": [[10, "bytemaker.bittypes.buffer.Buffer.base_bit_type"]], "base_bit_type (bytemaker.bittypes.float.float attribute)": [[10, "bytemaker.bittypes.float.Float.base_bit_type"]], "base_bit_type (bytemaker.bittypes.int.sint attribute)": [[10, "bytemaker.bittypes.int.SInt.base_bit_type"]], "base_bit_type (bytemaker.bittypes.int.uint attribute)": [[10, "bytemaker.bittypes.int.UInt.base_bit_type"]], "bits (bytemaker.bittypes.bittype.bittype property)": [[10, "bytemaker.bittypes.bittype.BitType.bits"]], "bytemaker.bittypes.bittype": [[10, "module-bytemaker.bittypes.bittype"]], "bytemaker.bittypes.buffer": [[10, "module-bytemaker.bittypes.buffer"]], "bytemaker.bittypes.float": [[10, "module-bytemaker.bittypes.float"]], "bytemaker.bittypes.int": [[10, "module-bytemaker.bittypes.int"]], "bytes_to_bittype() (in module bytemaker.bittypes.bittype)": [[10, "bytemaker.bittypes.bittype.bytes_to_bittype"]], "endianness (bytemaker.bittypes.bittype.bittype property)": [[10, "bytemaker.bittypes.bittype.BitType.endianness"]], "from_bits() (bytemaker.bittypes.bittype.bittype class method)": [[10, "bytemaker.bittypes.bittype.BitType.from_bits"]], "is_signed (bytemaker.bittypes.int.int attribute)": [[10, "bytemaker.bittypes.int.Int.is_signed"]], "is_signed (bytemaker.bittypes.int.sint attribute)": [[10, "bytemaker.bittypes.int.SInt.is_signed"]], "is_signed (bytemaker.bittypes.int.uint attribute)": [[10, "bytemaker.bittypes.int.UInt.is_signed"]], "min_bit_length() (bytemaker.bittypes.int.int static method)": [[10, "bytemaker.bittypes.int.Int.min_bit_length"]], "module": [[10, "module-bytemaker.bittypes.bittype"], [10, "module-bytemaker.bittypes.buffer"], [10, "module-bytemaker.bittypes.float"], [10, "module-bytemaker.bittypes.int"], [11, "module-bytemaker.bitvector.bitvector"], [11, "module-bytemaker.bitvector.bitvector_with_bitarray_speedup"], [12, "module-bytemaker.conversions.ctypes_"], [12, "module-bytemaker.conversions.pytypes"], [14, "module-bytemaker.typing_redirect"], [14, "module-bytemaker.utils"]], "num_bits() (bytemaker.bittypes.bittype.bittype class method)": [[10, "bytemaker.bittypes.bittype.BitType.num_bits"]], "num_bits() (bytemaker.bittypes.float.float class method)": [[10, "bytemaker.bittypes.float.Float.num_bits"]], "num_exponent_bits (bytemaker.bittypes.float.bfloat16 attribute)": [[10, "bytemaker.bittypes.float.BFloat16.num_exponent_bits"]], "num_exponent_bits (bytemaker.bittypes.float.fp24 attribute)": [[10, "bytemaker.bittypes.float.FP24.num_exponent_bits"]], "num_exponent_bits (bytemaker.bittypes.float.float attribute)": [[10, "bytemaker.bittypes.float.Float.num_exponent_bits"]], "num_exponent_bits (bytemaker.bittypes.float.float16 attribute)": [[10, "bytemaker.bittypes.float.Float16.num_exponent_bits"]], "num_exponent_bits (bytemaker.bittypes.float.float32 attribute)": [[10, "bytemaker.bittypes.float.Float32.num_exponent_bits"]], "num_exponent_bits (bytemaker.bittypes.float.float64 attribute)": [[10, "bytemaker.bittypes.float.Float64.num_exponent_bits"]], "num_exponent_bits (bytemaker.bittypes.float.tf19 attribute)": [[10, "bytemaker.bittypes.float.TF19.num_exponent_bits"]], "num_mantissa_bits (bytemaker.bittypes.float.bfloat16 attribute)": [[10, "bytemaker.bittypes.float.BFloat16.num_mantissa_bits"]], "num_mantissa_bits (bytemaker.bittypes.float.fp24 attribute)": [[10, "bytemaker.bittypes.float.FP24.num_mantissa_bits"]], "num_mantissa_bits (bytemaker.bittypes.float.float attribute)": [[10, "bytemaker.bittypes.float.Float.num_mantissa_bits"]], "num_mantissa_bits (bytemaker.bittypes.float.float16 attribute)": [[10, "bytemaker.bittypes.float.Float16.num_mantissa_bits"]], "num_mantissa_bits (bytemaker.bittypes.float.float32 attribute)": [[10, "bytemaker.bittypes.float.Float32.num_mantissa_bits"]], "num_mantissa_bits (bytemaker.bittypes.float.float64 attribute)": [[10, "bytemaker.bittypes.float.Float64.num_mantissa_bits"]], "num_mantissa_bits (bytemaker.bittypes.float.tf19 attribute)": [[10, "bytemaker.bittypes.float.TF19.num_mantissa_bits"]], "packing_format (bytemaker.bittypes.bittype.structpackedbittype property)": [[10, "bytemaker.bittypes.bittype.StructPackedBitType.packing_format"]], "packing_format_letter (bytemaker.bittypes.bittype.structpackedbittype attribute)": [[10, "bytemaker.bittypes.bittype.StructPackedBitType.packing_format_letter"]], "packing_format_letter (bytemaker.bittypes.float.float16 attribute)": [[10, "bytemaker.bittypes.float.Float16.packing_format_letter"]], "packing_format_letter (bytemaker.bittypes.float.float32 attribute)": [[10, "bytemaker.bittypes.float.Float32.packing_format_letter"]], "packing_format_letter (bytemaker.bittypes.float.float64 attribute)": [[10, "bytemaker.bittypes.float.Float64.packing_format_letter"]], "packing_format_letter (bytemaker.bittypes.int.sint16 attribute)": [[10, "bytemaker.bittypes.int.SInt16.packing_format_letter"]], "packing_format_letter (bytemaker.bittypes.int.sint32 attribute)": [[10, "bytemaker.bittypes.int.SInt32.packing_format_letter"]], "packing_format_letter (bytemaker.bittypes.int.sint64 attribute)": [[10, "bytemaker.bittypes.int.SInt64.packing_format_letter"]], "packing_format_letter (bytemaker.bittypes.int.sint8 attribute)": [[10, "bytemaker.bittypes.int.SInt8.packing_format_letter"]], "packing_format_letter (bytemaker.bittypes.int.uint16 attribute)": [[10, "bytemaker.bittypes.int.UInt16.packing_format_letter"]], "packing_format_letter (bytemaker.bittypes.int.uint32 attribute)": [[10, "bytemaker.bittypes.int.UInt32.packing_format_letter"]], "packing_format_letter (bytemaker.bittypes.int.uint64 attribute)": [[10, "bytemaker.bittypes.int.UInt64.packing_format_letter"]], "packing_format_letter (bytemaker.bittypes.int.uint8 attribute)": [[10, "bytemaker.bittypes.int.UInt8.packing_format_letter"]], "py_type (bytemaker.bittypes.bittype.bittype attribute)": [[10, "bytemaker.bittypes.bittype.BitType.py_type"]], "py_type (bytemaker.bittypes.buffer.buffer attribute)": [[10, "bytemaker.bittypes.buffer.Buffer.py_type"]], "py_type (bytemaker.bittypes.float.float attribute)": [[10, "bytemaker.bittypes.float.Float.py_type"]], "py_type (bytemaker.bittypes.int.int attribute)": [[10, "bytemaker.bittypes.int.Int.py_type"]], "signed_int_format (bytemaker.bittypes.int.signedconfig attribute)": [[10, "bytemaker.bittypes.int.SignedConfig.signed_int_format"]], "skip_struct_packing (bytemaker.bittypes.bittype.structpackedbittype property)": [[10, "bytemaker.bittypes.bittype.StructPackedBitType.skip_struct_packing"]], "skip_struct_packing (bytemaker.bittypes.int.sint16 property)": [[10, "bytemaker.bittypes.int.SInt16.skip_struct_packing"]], "skip_struct_packing (bytemaker.bittypes.int.sint32 property)": [[10, "bytemaker.bittypes.int.SInt32.skip_struct_packing"]], "skip_struct_packing (bytemaker.bittypes.int.sint64 property)": [[10, "bytemaker.bittypes.int.SInt64.skip_struct_packing"]], "skip_struct_packing (bytemaker.bittypes.int.sint8 property)": [[10, "bytemaker.bittypes.int.SInt8.skip_struct_packing"]], "specialize() (bytemaker.bittypes.buffer.buffer class method)": [[10, "bytemaker.bittypes.buffer.Buffer.specialize"]], "specialize() (bytemaker.bittypes.float.float class method)": [[10, "bytemaker.bittypes.float.Float.specialize"]], "specialize() (bytemaker.bittypes.int.sint class method)": [[10, "bytemaker.bittypes.int.SInt.specialize"]], "specialize() (bytemaker.bittypes.int.uint class method)": [[10, "bytemaker.bittypes.int.UInt.specialize"]], "to_binstring() (bytemaker.bittypes.float.float method)": [[10, "bytemaker.bittypes.float.Float.to_binstring"]], "to_bits() (bytemaker.bittypes.bittype.bittype method)": [[10, "bytemaker.bittypes.bittype.BitType.to_bits"]], "to_bitstring() (bytemaker.bittypes.int.int method)": [[10, "bytemaker.bittypes.int.Int.to_bitstring"]], "to_pyint() (bytemaker.bittypes.int.int method)": [[10, "bytemaker.bittypes.int.Int.to_pyint"]], "value (bytemaker.bittypes.bittype.bittype property)": [[10, "bytemaker.bittypes.bittype.BitType.value"]], "value (bytemaker.bittypes.bittype.structpackedbittype property)": [[10, "bytemaker.bittypes.bittype.StructPackedBitType.value"]], "value (bytemaker.bittypes.buffer.buffer property)": [[10, "bytemaker.bittypes.buffer.Buffer.value"]], "value (bytemaker.bittypes.float.float property)": [[10, "bytemaker.bittypes.float.Float.value"]], "value (bytemaker.bittypes.int.sint property)": [[10, "bytemaker.bittypes.int.SInt.value"]], "value (bytemaker.bittypes.int.uint property)": [[10, "bytemaker.bittypes.int.UInt.value"]], "bitvector (class in bytemaker.bitvector.bitvector)": [[11, "bytemaker.bitvector.bitvector.BitVector"]], "bitvector (class in bytemaker.bitvector.bitvector_with_bitarray_speedup)": [[11, "bytemaker.bitvector.bitvector_with_bitarray_speedup.BitVector"]], "bitscastable (class in bytemaker.bitvector.bitvector)": [[11, "bytemaker.bitvector.bitvector.BitsCastable"]], "bitscastable (class in bytemaker.bitvector.bitvector_with_bitarray_speedup)": [[11, "bytemaker.bitvector.bitvector_with_bitarray_speedup.BitsCastable"]], "bitsconstructible (in module bytemaker.bitvector.bitvector_with_bitarray_speedup)": [[11, "bytemaker.bitvector.bitvector_with_bitarray_speedup.BitsConstructible"]], "append() (bytemaker.bitvector.bitvector.bitvector method)": [[11, "bytemaker.bitvector.bitvector.BitVector.append"]], "append() (bytemaker.bitvector.bitvector_with_bitarray_speedup.bitvector method)": [[11, "bytemaker.bitvector.bitvector_with_bitarray_speedup.BitVector.append"]], "bin() (bytemaker.bitvector.bitvector.bitvector method)": [[11, "bytemaker.bitvector.bitvector.BitVector.bin"]], "bin() (bytemaker.bitvector.bitvector_with_bitarray_speedup.bitvector method)": [[11, "bytemaker.bitvector.bitvector_with_bitarray_speedup.BitVector.bin"]], "bytemaker.bitvector.bitvector": [[11, "module-bytemaker.bitvector.bitvector"]], "bytemaker.bitvector.bitvector_with_bitarray_speedup": [[11, "module-bytemaker.bitvector.bitvector_with_bitarray_speedup"]], "cast_if_not_bitarray() (bytemaker.bitvector.bitvector.bitvector class method)": [[11, "bytemaker.bitvector.bitvector.BitVector.cast_if_not_bitarray"]], "cast_if_not_bitarray() (bytemaker.bitvector.bitvector_with_bitarray_speedup.bitvector class method)": [[11, "bytemaker.bitvector.bitvector_with_bitarray_speedup.BitVector.cast_if_not_bitarray"]], "clear() (bytemaker.bitvector.bitvector.bitvector method)": [[11, "bytemaker.bitvector.bitvector.BitVector.clear"]], "clear() (bytemaker.bitvector.bitvector_with_bitarray_speedup.bitvector method)": [[11, "bytemaker.bitvector.bitvector_with_bitarray_speedup.BitVector.clear"]], "copy() (bytemaker.bitvector.bitvector.bitvector method)": [[11, "bytemaker.bitvector.bitvector.BitVector.copy"]], "copy() (bytemaker.bitvector.bitvector_with_bitarray_speedup.bitvector method)": [[11, "bytemaker.bitvector.bitvector_with_bitarray_speedup.BitVector.copy"]], "count() (bytemaker.bitvector.bitvector.bitvector method)": [[11, "bytemaker.bitvector.bitvector.BitVector.count"]], "count() (bytemaker.bitvector.bitvector_with_bitarray_speedup.bitvector method)": [[11, "bytemaker.bitvector.bitvector_with_bitarray_speedup.BitVector.count"]], "endswith() (bytemaker.bitvector.bitvector.bitvector method)": [[11, "bytemaker.bitvector.bitvector.BitVector.endswith"]], "endswith() (bytemaker.bitvector.bitvector_with_bitarray_speedup.bitvector method)": [[11, "bytemaker.bitvector.bitvector_with_bitarray_speedup.BitVector.endswith"]], "extend() (bytemaker.bitvector.bitvector.bitvector method)": [[11, "bytemaker.bitvector.bitvector.BitVector.extend"]], "extend() (bytemaker.bitvector.bitvector_with_bitarray_speedup.bitvector method)": [[11, "bytemaker.bitvector.bitvector_with_bitarray_speedup.BitVector.extend"]], "find() (bytemaker.bitvector.bitvector.bitvector method)": [[11, "bytemaker.bitvector.bitvector.BitVector.find"]], "find() (bytemaker.bitvector.bitvector_with_bitarray_speedup.bitvector method)": [[11, "bytemaker.bitvector.bitvector_with_bitarray_speedup.BitVector.find"]], "from01() (bytemaker.bitvector.bitvector.bitvector class method)": [[11, "bytemaker.bitvector.bitvector.BitVector.from01"]], "from01() (bytemaker.bitvector.bitvector_with_bitarray_speedup.bitvector class method)": [[11, "bytemaker.bitvector.bitvector_with_bitarray_speedup.BitVector.from01"]], "from_bytes() (bytemaker.bitvector.bitvector.bitvector class method)": [[11, "bytemaker.bitvector.bitvector.BitVector.from_bytes"]], "from_bytes() (bytemaker.bitvector.bitvector_with_bitarray_speedup.bitvector class method)": [[11, "bytemaker.bitvector.bitvector_with_bitarray_speedup.BitVector.from_bytes"]], "from_chararray() (bytemaker.bitvector.bitvector.bitvector class method)": [[11, "bytemaker.bitvector.bitvector.BitVector.from_chararray"]], "from_chararray() (bytemaker.bitvector.bitvector_with_bitarray_speedup.bitvector class method)": [[11, "bytemaker.bitvector.bitvector_with_bitarray_speedup.BitVector.from_chararray"]], "from_int() (bytemaker.bitvector.bitvector.bitvector class method)": [[11, "bytemaker.bitvector.bitvector.BitVector.from_int"]], "from_int() (bytemaker.bitvector.bitvector_with_bitarray_speedup.bitvector class method)": [[11, "bytemaker.bitvector.bitvector_with_bitarray_speedup.BitVector.from_int"]], "frombase() (bytemaker.bitvector.bitvector.bitvector class method)": [[11, "bytemaker.bitvector.bitvector.BitVector.frombase"]], "frombase() (bytemaker.bitvector.bitvector_with_bitarray_speedup.bitvector class method)": [[11, "bytemaker.bitvector.bitvector_with_bitarray_speedup.BitVector.frombase"]], "frombin() (bytemaker.bitvector.bitvector.bitvector class method)": [[11, "bytemaker.bitvector.bitvector.BitVector.frombin"]], "frombin() (bytemaker.bitvector.bitvector_with_bitarray_speedup.bitvector class method)": [[11, "bytemaker.bitvector.bitvector_with_bitarray_speedup.BitVector.frombin"]], "fromhex() (bytemaker.bitvector.bitvector.bitvector class method)": [[11, "bytemaker.bitvector.bitvector.BitVector.fromhex"]], "fromhex() (bytemaker.bitvector.bitvector_with_bitarray_speedup.bitvector class method)": [[11, "bytemaker.bitvector.bitvector_with_bitarray_speedup.BitVector.fromhex"]], "fromoct() (bytemaker.bitvector.bitvector.bitvector class method)": [[11, "bytemaker.bitvector.bitvector.BitVector.fromoct"]], "fromoct() (bytemaker.bitvector.bitvector_with_bitarray_speedup.bitvector class method)": [[11, "bytemaker.bitvector.bitvector_with_bitarray_speedup.BitVector.fromoct"]], "fromsize() (bytemaker.bitvector.bitvector.bitvector class method)": [[11, "bytemaker.bitvector.bitvector.BitVector.fromsize"]], "fromsize() (bytemaker.bitvector.bitvector_with_bitarray_speedup.bitvector class method)": [[11, "bytemaker.bitvector.bitvector_with_bitarray_speedup.BitVector.fromsize"]], "hex() (bytemaker.bitvector.bitvector.bitvector method)": [[11, "bytemaker.bitvector.bitvector.BitVector.hex"]], "hex() (bytemaker.bitvector.bitvector_with_bitarray_speedup.bitvector method)": [[11, "bytemaker.bitvector.bitvector_with_bitarray_speedup.BitVector.hex"]], "index() (bytemaker.bitvector.bitvector.bitvector method)": [[11, "bytemaker.bitvector.bitvector.BitVector.index"]], "index() (bytemaker.bitvector.bitvector_with_bitarray_speedup.bitvector method)": [[11, "bytemaker.bitvector.bitvector_with_bitarray_speedup.BitVector.index"]], "insert() (bytemaker.bitvector.bitvector.bitvector method)": [[11, "bytemaker.bitvector.bitvector.BitVector.insert"]], "insert() (bytemaker.bitvector.bitvector_with_bitarray_speedup.bitvector method)": [[11, "bytemaker.bitvector.bitvector_with_bitarray_speedup.BitVector.insert"]], "join() (bytemaker.bitvector.bitvector.bitvector method)": [[11, "bytemaker.bitvector.bitvector.BitVector.join"]], "join() (bytemaker.bitvector.bitvector_with_bitarray_speedup.bitvector method)": [[11, "bytemaker.bitvector.bitvector_with_bitarray_speedup.BitVector.join"]], "lpad() (bytemaker.bitvector.bitvector.bitvector method)": [[11, "bytemaker.bitvector.bitvector.BitVector.lpad"]], "lpad() (bytemaker.bitvector.bitvector_with_bitarray_speedup.bitvector method)": [[11, "bytemaker.bitvector.bitvector_with_bitarray_speedup.BitVector.lpad"]], "lstrip() (bytemaker.bitvector.bitvector.bitvector method)": [[11, "bytemaker.bitvector.bitvector.BitVector.lstrip"]], "lstrip() (bytemaker.bitvector.bitvector_with_bitarray_speedup.bitvector method)": [[11, "bytemaker.bitvector.bitvector_with_bitarray_speedup.BitVector.lstrip"]], "oct() (bytemaker.bitvector.bitvector.bitvector method)": [[11, "bytemaker.bitvector.bitvector.BitVector.oct"]], "oct() (bytemaker.bitvector.bitvector_with_bitarray_speedup.bitvector method)": [[11, "bytemaker.bitvector.bitvector_with_bitarray_speedup.BitVector.oct"]], "partition() (bytemaker.bitvector.bitvector.bitvector method)": [[11, "bytemaker.bitvector.bitvector.BitVector.partition"]], "partition() (bytemaker.bitvector.bitvector_with_bitarray_speedup.bitvector method)": [[11, "bytemaker.bitvector.bitvector_with_bitarray_speedup.BitVector.partition"]], "pop() (bytemaker.bitvector.bitvector.bitvector method)": [[11, "bytemaker.bitvector.bitvector.BitVector.pop"]], "pop() (bytemaker.bitvector.bitvector_with_bitarray_speedup.bitvector method)": [[11, "bytemaker.bitvector.bitvector_with_bitarray_speedup.BitVector.pop"]], "remove() (bytemaker.bitvector.bitvector.bitvector method)": [[11, "bytemaker.bitvector.bitvector.BitVector.remove"]], "remove() (bytemaker.bitvector.bitvector_with_bitarray_speedup.bitvector method)": [[11, "bytemaker.bitvector.bitvector_with_bitarray_speedup.BitVector.remove"]], "replace() (bytemaker.bitvector.bitvector.bitvector method)": [[11, "bytemaker.bitvector.bitvector.BitVector.replace"]], "replace() (bytemaker.bitvector.bitvector_with_bitarray_speedup.bitvector method)": [[11, "bytemaker.bitvector.bitvector_with_bitarray_speedup.BitVector.replace"]], "reverse() (bytemaker.bitvector.bitvector.bitvector method)": [[11, "bytemaker.bitvector.bitvector.BitVector.reverse"]], "reverse() (bytemaker.bitvector.bitvector_with_bitarray_speedup.bitvector method)": [[11, "bytemaker.bitvector.bitvector_with_bitarray_speedup.BitVector.reverse"]], "rfind() (bytemaker.bitvector.bitvector.bitvector method)": [[11, "bytemaker.bitvector.bitvector.BitVector.rfind"]], "rfind() (bytemaker.bitvector.bitvector_with_bitarray_speedup.bitvector method)": [[11, "bytemaker.bitvector.bitvector_with_bitarray_speedup.BitVector.rfind"]], "rindex() (bytemaker.bitvector.bitvector.bitvector method)": [[11, "bytemaker.bitvector.bitvector.BitVector.rindex"]], "rindex() (bytemaker.bitvector.bitvector_with_bitarray_speedup.bitvector method)": [[11, "bytemaker.bitvector.bitvector_with_bitarray_speedup.BitVector.rindex"]], "rpad() (bytemaker.bitvector.bitvector.bitvector method)": [[11, "bytemaker.bitvector.bitvector.BitVector.rpad"]], "rpad() (bytemaker.bitvector.bitvector_with_bitarray_speedup.bitvector method)": [[11, "bytemaker.bitvector.bitvector_with_bitarray_speedup.BitVector.rpad"]], "rpartition() (bytemaker.bitvector.bitvector.bitvector method)": [[11, "bytemaker.bitvector.bitvector.BitVector.rpartition"]], "rpartition() (bytemaker.bitvector.bitvector_with_bitarray_speedup.bitvector method)": [[11, "bytemaker.bitvector.bitvector_with_bitarray_speedup.BitVector.rpartition"]], "rstrip() (bytemaker.bitvector.bitvector.bitvector method)": [[11, "bytemaker.bitvector.bitvector.BitVector.rstrip"]], "rstrip() (bytemaker.bitvector.bitvector_with_bitarray_speedup.bitvector method)": [[11, "bytemaker.bitvector.bitvector_with_bitarray_speedup.BitVector.rstrip"]], "startswith() (bytemaker.bitvector.bitvector.bitvector method)": [[11, "bytemaker.bitvector.bitvector.BitVector.startswith"]], "startswith() (bytemaker.bitvector.bitvector_with_bitarray_speedup.bitvector method)": [[11, "bytemaker.bitvector.bitvector_with_bitarray_speedup.BitVector.startswith"]], "strip() (bytemaker.bitvector.bitvector.bitvector method)": [[11, "bytemaker.bitvector.bitvector.BitVector.strip"]], "strip() (bytemaker.bitvector.bitvector_with_bitarray_speedup.bitvector method)": [[11, "bytemaker.bitvector.bitvector_with_bitarray_speedup.BitVector.strip"]], "to01() (bytemaker.bitvector.bitvector.bitvector method)": [[11, "bytemaker.bitvector.bitvector.BitVector.to01"]], "to01() (bytemaker.bitvector.bitvector_with_bitarray_speedup.bitvector method)": [[11, "bytemaker.bitvector.bitvector_with_bitarray_speedup.BitVector.to01"]], "to_bytes() (bytemaker.bitvector.bitvector.bitvector method)": [[11, "bytemaker.bitvector.bitvector.BitVector.to_bytes"]], "to_bytes() (bytemaker.bitvector.bitvector_with_bitarray_speedup.bitvector method)": [[11, "bytemaker.bitvector.bitvector_with_bitarray_speedup.BitVector.to_bytes"]], "to_chararray() (bytemaker.bitvector.bitvector.bitvector method)": [[11, "bytemaker.bitvector.bitvector.BitVector.to_chararray"]], "to_chararray() (bytemaker.bitvector.bitvector_with_bitarray_speedup.bitvector method)": [[11, "bytemaker.bitvector.bitvector_with_bitarray_speedup.BitVector.to_chararray"]], "to_int() (bytemaker.bitvector.bitvector.bitvector method)": [[11, "bytemaker.bitvector.bitvector.BitVector.to_int"]], "to_int() (bytemaker.bitvector.bitvector_with_bitarray_speedup.bitvector method)": [[11, "bytemaker.bitvector.bitvector_with_bitarray_speedup.BitVector.to_int"]], "tobase() (bytemaker.bitvector.bitvector.bitvector method)": [[11, "bytemaker.bitvector.bitvector.BitVector.tobase"]], "tobase() (bytemaker.bitvector.bitvector_with_bitarray_speedup.bitvector method)": [[11, "bytemaker.bitvector.bitvector_with_bitarray_speedup.BitVector.tobase"]], "conversionconfig (class in bytemaker.conversions.pytypes)": [[12, "bytemaker.conversions.pytypes.ConversionConfig"]], "conversioninfo (class in bytemaker.conversions.pytypes)": [[12, "bytemaker.conversions.pytypes.ConversionInfo"]], "pytype (class in bytemaker.conversions.pytypes)": [[12, "bytemaker.conversions.pytypes.PyType"]], "pytypemeta (class in bytemaker.conversions.pytypes)": [[12, "bytemaker.conversions.pytypes.PyTypeMeta"]], "bits_to_ctype() (in module bytemaker.conversions.ctypes_)": [[12, "bytemaker.conversions.ctypes_.bits_to_ctype"]], "bits_to_pytype() (in module bytemaker.conversions.pytypes)": [[12, "bytemaker.conversions.pytypes.bits_to_pytype"]], "bytemaker.conversions.ctypes_": [[12, "module-bytemaker.conversions.ctypes_"]], "bytemaker.conversions.pytypes": [[12, "module-bytemaker.conversions.pytypes"]], "bytes_to_ctype() (in module bytemaker.conversions.ctypes_)": [[12, "bytemaker.conversions.ctypes_.bytes_to_ctype"]], "bytes_to_pytype() (in module bytemaker.conversions.pytypes)": [[12, "bytemaker.conversions.pytypes.bytes_to_pytype"]], "ctype_to_bits() (in module bytemaker.conversions.ctypes_)": [[12, "bytemaker.conversions.ctypes_.ctype_to_bits"]], "ctype_to_bytes() (in module bytemaker.conversions.ctypes_)": [[12, "bytemaker.conversions.ctypes_.ctype_to_bytes"]], "from_bits (bytemaker.conversions.pytypes.conversioninfo attribute)": [[12, "bytemaker.conversions.pytypes.ConversionInfo.from_bits"]], "from_bytes() (bytemaker.conversions.pytypes.conversioninfo class method)": [[12, "bytemaker.conversions.pytypes.ConversionInfo.from_bytes"]], "get_conversion_info() (bytemaker.conversions.pytypes.conversionconfig class method)": [[12, "bytemaker.conversions.pytypes.ConversionConfig.get_conversion_info"]], "has_suitable_conversion() (bytemaker.conversions.pytypes.conversionconfig class method)": [[12, "bytemaker.conversions.pytypes.ConversionConfig.has_suitable_conversion"]], "num_bits (bytemaker.conversions.pytypes.conversioninfo attribute)": [[12, "bytemaker.conversions.pytypes.ConversionInfo.num_bits"]], "num_bytes() (bytemaker.conversions.pytypes.conversioninfo class method)": [[12, "bytemaker.conversions.pytypes.ConversionInfo.num_bytes"]], "pytype (bytemaker.conversions.pytypes.conversioninfo attribute)": [[12, "bytemaker.conversions.pytypes.ConversionInfo.pytype"]], "pytype_to_bits() (in module bytemaker.conversions.pytypes)": [[12, "bytemaker.conversions.pytypes.pytype_to_bits"]], "pytype_to_bytes() (in module bytemaker.conversions.pytypes)": [[12, "bytemaker.conversions.pytypes.pytype_to_bytes"]], "reverse_bytes_unit() (in module bytemaker.conversions.ctypes_)": [[12, "bytemaker.conversions.ctypes_.reverse_bytes_unit"]], "reverse_ctype_endianness() (in module bytemaker.conversions.ctypes_)": [[12, "bytemaker.conversions.ctypes_.reverse_ctype_endianness"]], "set_conversion_info() (bytemaker.conversions.pytypes.conversionconfig class method)": [[12, "bytemaker.conversions.pytypes.ConversionConfig.set_conversion_info"]], "to_bits (bytemaker.conversions.pytypes.conversioninfo attribute)": [[12, "bytemaker.conversions.pytypes.ConversionInfo.to_bits"]], "to_bytes() (bytemaker.conversions.pytypes.conversioninfo class method)": [[12, "bytemaker.conversions.pytypes.ConversionInfo.to_bytes"]], "any (class in bytemaker.typing_redirect)": [[14, "bytemaker.typing_redirect.Any"]], "buffer (class in bytemaker.typing_redirect)": [[14, "bytemaker.typing_redirect.Buffer"]], "byteconvertible (class in bytemaker.utils)": [[14, "bytemaker.utils.ByteConvertible"]], "callable (class in bytemaker.typing_redirect)": [[14, "bytemaker.typing_redirect.Callable"]], "dataclasstype (class in bytemaker.utils)": [[14, "bytemaker.utils.DataClassType"]], "dataclasstypemeta (class in bytemaker.utils)": [[14, "bytemaker.utils.DataClassTypeMeta"]], "forwardref (class in bytemaker.typing_redirect)": [[14, "bytemaker.typing_redirect.ForwardRef"]], "frozendict (class in bytemaker.utils)": [[14, "bytemaker.utils.FrozenDict"]], "hashable (class in bytemaker.typing_redirect)": [[14, "bytemaker.typing_redirect.Hashable"]], "hashablemapping (class in bytemaker.utils)": [[14, "bytemaker.utils.HashableMapping"]], "iterable (class in bytemaker.typing_redirect)": [[14, "bytemaker.typing_redirect.Iterable"]], "mapping (class in bytemaker.typing_redirect)": [[14, "bytemaker.typing_redirect.Mapping"]], "mutablemapping (class in bytemaker.typing_redirect)": [[14, "bytemaker.typing_redirect.MutableMapping"]], "mutablesequence (class in bytemaker.typing_redirect)": [[14, "bytemaker.typing_redirect.MutableSequence"]], "paramspec (class in bytemaker.typing_redirect)": [[14, "bytemaker.typing_redirect.ParamSpec"]], "protocol (class in bytemaker.typing_redirect)": [[14, "bytemaker.typing_redirect.Protocol"]], "sequence (class in bytemaker.typing_redirect)": [[14, "bytemaker.typing_redirect.Sequence"]], "trie (class in bytemaker.utils)": [[14, "bytemaker.utils.Trie"]], "typeis (class in bytemaker.typing_redirect)": [[14, "bytemaker.typing_redirect.TypeIs"]], "typevar (class in bytemaker.typing_redirect)": [[14, "bytemaker.typing_redirect.TypeVar"]], "uniontype (class in bytemaker.typing_redirect)": [[14, "bytemaker.typing_redirect.UnionType"]], "append() (bytemaker.typing_redirect.mutablesequence method)": [[14, "bytemaker.typing_redirect.MutableSequence.append"]], "args (bytemaker.typing_redirect.paramspec attribute)": [[14, "bytemaker.typing_redirect.ParamSpec.args"]], "build_prefix_trie() (bytemaker.utils.trie static method)": [[14, "bytemaker.utils.Trie.build_prefix_trie"]], "build_suffix_trie() (bytemaker.utils.trie static method)": [[14, "bytemaker.utils.Trie.build_suffix_trie"]], "bytemaker.typing_redirect": [[14, "module-bytemaker.typing_redirect"]], "bytemaker.utils": [[14, "module-bytemaker.utils"]], "classproperty (class in bytemaker.utils)": [[14, "bytemaker.utils.classproperty"]], "clear() (bytemaker.typing_redirect.mutablemapping method)": [[14, "bytemaker.typing_redirect.MutableMapping.clear"]], "clear() (bytemaker.typing_redirect.mutablesequence method)": [[14, "bytemaker.typing_redirect.MutableSequence.clear"]], "count() (bytemaker.typing_redirect.sequence method)": [[14, "bytemaker.typing_redirect.Sequence.count"]], "extend() (bytemaker.typing_redirect.mutablesequence method)": [[14, "bytemaker.typing_redirect.MutableSequence.extend"]], "get() (bytemaker.typing_redirect.mapping method)": [[14, "bytemaker.typing_redirect.Mapping.get"]], "get_args() (in module bytemaker.typing_redirect)": [[14, "bytemaker.typing_redirect.get_args"]], "get_origin() (in module bytemaker.typing_redirect)": [[14, "bytemaker.typing_redirect.get_origin"]], "get_type_hints() (in module bytemaker.typing_redirect)": [[14, "bytemaker.typing_redirect.get_type_hints"]], "index() (bytemaker.typing_redirect.sequence method)": [[14, "bytemaker.typing_redirect.Sequence.index"]], "insert() (bytemaker.typing_redirect.mutablesequence method)": [[14, "bytemaker.typing_redirect.MutableSequence.insert"]], "is_instance_of_union() (in module bytemaker.utils)": [[14, "bytemaker.utils.is_instance_of_union"]], "is_subclass_of_union() (in module bytemaker.utils)": [[14, "bytemaker.utils.is_subclass_of_union"]], "items() (bytemaker.typing_redirect.mapping method)": [[14, "bytemaker.typing_redirect.Mapping.items"]], "items() (bytemaker.utils.frozendict method)": [[14, "bytemaker.utils.FrozenDict.items"]], "keys() (bytemaker.typing_redirect.mapping method)": [[14, "bytemaker.typing_redirect.Mapping.keys"]], "kwargs (bytemaker.typing_redirect.paramspec attribute)": [[14, "bytemaker.typing_redirect.ParamSpec.kwargs"]], "overload() (in module bytemaker.typing_redirect)": [[14, "bytemaker.typing_redirect.overload"]], "pop() (bytemaker.typing_redirect.mutablemapping method)": [[14, "bytemaker.typing_redirect.MutableMapping.pop"]], "pop() (bytemaker.typing_redirect.mutablesequence method)": [[14, "bytemaker.typing_redirect.MutableSequence.pop"]], "popitem() (bytemaker.typing_redirect.mutablemapping method)": [[14, "bytemaker.typing_redirect.MutableMapping.popitem"]], "remove() (bytemaker.typing_redirect.mutablesequence method)": [[14, "bytemaker.typing_redirect.MutableSequence.remove"]], "reverse() (bytemaker.typing_redirect.mutablesequence method)": [[14, "bytemaker.typing_redirect.MutableSequence.reverse"]], "runtime_checkable() (in module bytemaker.typing_redirect)": [[14, "bytemaker.typing_redirect.runtime_checkable"]], "setdefault() (bytemaker.typing_redirect.mutablemapping method)": [[14, "bytemaker.typing_redirect.MutableMapping.setdefault"]], "twos_complement() (in module bytemaker.utils)": [[14, "bytemaker.utils.twos_complement"]], "twos_complement_bit_length() (in module bytemaker.utils)": [[14, "bytemaker.utils.twos_complement_bit_length"]], "update() (bytemaker.typing_redirect.mutablemapping method)": [[14, "bytemaker.typing_redirect.MutableMapping.update"]], "values() (bytemaker.typing_redirect.mapping method)": [[14, "bytemaker.typing_redirect.Mapping.values"]]}})
